// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: ingestion_job.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createIngestionJob = `-- name: CreateIngestionJob :one
insert into ingestion_jobs (
    resource_id,
    op_status
) values (
    $1, $2
) returning id, resource_id, op_status, created_at, updated_at
`

type CreateIngestionJobParams struct {
	ResourceID pgtype.UUID     `json:"resource_id"`
	OpStatus   OperationStatus `json:"op_status"`
}

func (q *Queries) CreateIngestionJob(ctx context.Context, arg CreateIngestionJobParams) (IngestionJob, error) {
	row := q.db.QueryRow(ctx, createIngestionJob, arg.ResourceID, arg.OpStatus)
	var i IngestionJob
	err := row.Scan(
		&i.ID,
		&i.ResourceID,
		&i.OpStatus,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateIngestionJobStatus = `-- name: UpdateIngestionJobStatus :exec
update ingestion_jobs
set
    op_status = $1
where id = any($2::int[])
`

type UpdateIngestionJobStatusParams struct {
	OpStatus OperationStatus `json:"op_status"`
	Ids      []int32         `json:"ids"`
}

func (q *Queries) UpdateIngestionJobStatus(ctx context.Context, arg UpdateIngestionJobStatusParams) error {
	_, err := q.db.Exec(ctx, updateIngestionJobStatus, arg.OpStatus, arg.Ids)
	return err
}
