// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgconn"
)

type Querier interface {
	CountEncryptionKeys(ctx context.Context) (int64, error)
	CreateApiKey(ctx context.Context, arg CreateApiKeyParams) (ApiKey, error)
	CreateEmptyDocuments(ctx context.Context, arg CreateEmptyDocumentsParams) ([]CreateEmptyDocumentsRow, error)
	CreateEncryptionKeys(ctx context.Context, arg CreateEncryptionKeysParams) (EncryptionKey, error)
	DeleteApiKey(ctx context.Context, arg DeleteApiKeyParams) (pgconn.CommandTag, error)
	DeleteEncryptionKey(ctx context.Context, id int32) (pgconn.CommandTag, error)
	DeleteFiles(ctx context.Context, arg DeleteFilesParams) (pgconn.CommandTag, error)
	GetActiveKey(ctx context.Context) (GetActiveKeyRow, error)
	GetApiKeyPayload(ctx context.Context, credential []byte) (GetApiKeyPayloadRow, error)
	GetFilesObjectKeys(ctx context.Context, arg GetFilesObjectKeysParams) ([]string, error)
	ListApiKeys(ctx context.Context, userID int32) ([][]byte, error)
	ListConflictingFiles(ctx context.Context, arg ListConflictingFilesParams) ([]ListConflictingFilesRow, error)
	RegisterUser(ctx context.Context, email string) (UserClient, error)
	SyncDelete(ctx context.Context, ids []int32) (pgconn.CommandTag, error)
	SyncUpdateDocument(ctx context.Context, arg SyncUpdateDocumentParams) (pgconn.CommandTag, error)
	UpdateDocumentUploadStatus(ctx context.Context, arg UpdateDocumentUploadStatusParams) (pgconn.CommandTag, error)
}

var _ Querier = (*Queries)(nil)
